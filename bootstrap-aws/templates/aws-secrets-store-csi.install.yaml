{{- if index .Values "secrets-store-csi-driver" "enabled" -}}

---
# Source: secrets-store-csi-driver-provider-aws/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: secrets-provider-aws-secrets-store-csi-driver-provider-aws
  namespace: {{ include "bootstrap.namespace" . }}
  labels:
    app.kubernetes.io/name: secrets-store-csi-driver-provider-aws
    app.kubernetes.io/instance: secrets-provider-aws
    app: secrets-store-csi-driver-provider-aws
---
# Source: secrets-store-csi-driver-provider-aws/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: secrets-provider-aws-secrets-store-csi-driver-provider-aws-cluster-role
  labels:
    app.kubernetes.io/name: secrets-store-csi-driver-provider-aws
    app.kubernetes.io/instance: secrets-provider-aws
    app: secrets-store-csi-driver-provider-aws
rules:
  - apiGroups: [""]
    resources: ["serviceaccounts/token"]
    verbs: ["create"]
  - apiGroups: [""]
    resources: ["serviceaccounts"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get"]
---
# Source: secrets-store-csi-driver-provider-aws/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: secrets-provider-aws-secrets-store-csi-driver-provider-aws-cluster-role-binding
  labels:
    app.kubernetes.io/name: secrets-store-csi-driver-provider-aws
    app.kubernetes.io/instance: secrets-provider-aws
    app: secrets-store-csi-driver-provider-aws
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: secrets-provider-aws-secrets-store-csi-driver-provider-aws-cluster-role
subjects:
  - kind: ServiceAccount
    name: secrets-provider-aws-secrets-store-csi-driver-provider-aws
    namespace: {{ include "bootstrap.namespace" . }}
---
# Source: secrets-store-csi-driver-provider-aws/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: {{ include "bootstrap.namespace" . }}
  name: secrets-provider-aws-secrets-store-csi-driver-provider-aws
  labels:
    app.kubernetes.io/name: secrets-store-csi-driver-provider-aws
    app.kubernetes.io/instance: secrets-provider-aws
    app: secrets-store-csi-driver-provider-aws
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: secrets-store-csi-driver-provider-aws
  template:
    metadata:
      labels:
        app.kubernetes.io/name: secrets-store-csi-driver-provider-aws
        app.kubernetes.io/instance: secrets-provider-aws
        app: secrets-store-csi-driver-provider-aws
    spec:
      serviceAccountName: secrets-provider-aws-secrets-store-csi-driver-provider-aws
      hostNetwork: false
      containers:
        - name: provider-aws-installer
          image: public.ecr.aws/aws-secrets-manager/secrets-store-csi-driver-provider-aws:1.0.r2-68-gab548b3-2024.03.20.21.58
          imagePullPolicy: IfNotPresent
          args:
            - --provider-volume=/etc/kubernetes/secrets-store-csi-providers
          resources:
            limits:
              cpu: 50m
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
          volumeMounts:
            - mountPath: /etc/kubernetes/secrets-store-csi-providers
              name: providervol
            - name: mountpoint-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: HostToContainer
      volumes:
        - name: providervol
          hostPath:
            path: /etc/kubernetes/secrets-store-csi-providers
        - name: mountpoint-dir
          hostPath:
            path: /var/lib/kubelet/pods
            type: DirectoryOrCreate
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: nvidia.com/gpu
          operator: Exists
{{- end }}