{{- if .Values.clickhouse.enabled }}
apiVersion: "clickhouse.altinity.com/v1"
kind: "ClickHouseInstallation"
metadata:
  name: {{ include "clickhouse.name" . }}
  labels:
    {{ include "clickhouse.labels" . | nindent 4 }}
spec:
  configuration:
    {{- if .Values.clickhouse.keeper.enabled }}
    zookeeper:
      nodes:
        - host: keeper-platform # TODO
          port: 2181
    {{- end }}
    users:
      {{ printf "%s/password" .Values.clickhouse.auth.backupsUser.username }}: {{ .Values.clickhouse.auth.backupsUser.password}}
      {{ printf "%s/networks/ip" .Values.clickhouse.auth.backupsUser.username }}:
        - ::/0
      {{ printf "%s/password" .Values.clickhouse.auth.nebulyUser.username}}: {{ .Values.clickhouse.auth.nebulyUser.password}}
      {{ printf "%s/named_collection_control" .Values.clickhouse.auth.nebulyUser.username }}: 1
      {{ printf "%s/networks/ip" .Values.clickhouse.auth.nebulyUser.username }}:
        - ::/0
    clusters:
      - name: default
        layout:
          shardsCount: 1 # Sharding is currently not supported by Nebuly Platform
          replicasCount: {{ .Values.clickhouse.replicas }}
        templates:
          podTemplate: {{ printf "clickhouse-%s" .Values.clickhouse.version }}
          volumeClaimTemplate: data
    settings:
      max_server_memory_usage_to_ram_ratio: "0.7"

  templates:
    podTemplates:
      - name: {{ printf "clickhouse-%s" .Values.clickhouse.version }}
        metadata:
          annotations:
            prometheus.io/scrape: "true"
            prometheus.io/port: "8888"
            prometheus.io/path: "/metrics"
            # need separate prometheus scrape config, look to https://github.com/prometheus/prometheus/issues/3756
            clickhouse.backup/scrape: "true"
            clickhouse.backup/port: "7171"
            clickhouse.backup/path: "/metrics"
        spec:
          {{- with .Values.clickhouse.tolerations }}
          tolerations:
            {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.clickhouse.affinity}}
          affinity:
            {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.clickhouse.volumeMounts }}
          volumes:
            {{ toYaml . | nindent 12 }}
          {{- end }}
          containers:
            {{- if .Values.clickhouse.backups.enabled }}
            - name: clickhouse-backup
              image: altinity/clickhouse-backup:2.6.5
              args: [ "server" ]
              env:
                - name: LOG_LEVEL
                  value: {{ .Values.clickhouse.logLevel }}
                - name: ALLOW_EMPTY_BACKUPS
                  value: "true"
                - name: API_LISTEN
                  value: "0.0.0.0:7171"
                # INSERT INTO system.backup_actions to execute backup
                - name: API_CREATE_INTEGRATION_TABLES
                  value: "true"
                - name: BACKUPS_TO_KEEP_LOCAL
                  value: {{ .Values.clickhouse.backups.numToKeepLocal | quote }}
                - name: BACKUPS_TO_KEEP_REMOTE
                  value: {{ .Values.clickhouse.backups.numToKeepRemote | quote }}
                # Storage config
                - name: REMOTE_STORAGE
                  value: "azblob"
                - name: AZBLOB_ACCOUNT_KEY
                  valueFrom:
                    secretKeyRef:
                      name: nebuly-platform-credentials
                      key: backups-storage-account-access-key
                # Storage config
                - name: AZBLOB_ACCOUNT_NAME
                  value: nblprdplatformbackups
                - name: AZBLOB_CONTAINER
                  value: clickhouse
                # Restore settings
                # - name: RESTORE_DATABASE_MAPPING
                #   value: "system:system,information_schema:information_schema,default:default,analytics:analytics_restored,analytics-dev:analytics_dev_restored"
                # {shard} macro defined by clickhouse-operator
                - name: AZBLOB_PATH
                  value: backup/shard-{shard}
              ports:
                # require to avoid double scraping clickhouse and clickhouse-backup containers
                - name: backup-rest
                  containerPort: 7171
              volumeMounts:
                - name: data
                  mountPath: /var/lib/clickhouse
                {{ toYaml .Values.clickhouse.volumeMounts | nindent 16 }}
            {{- end }}
            - name: clickhouse
              image: {{ printf "clickhouse/clickhouse-server:%s" .Values.clickhouse.version }}
              env:
                - name: PGSSLCERT
                  value: /tmp/postgresql.crt
                - name: CLICKHOUSE_DB
                  value: {{ .Values.clickhouse.databaseName }}
              resources:
                {{- toYaml .Values.clickhouse.resources | nindent 16 }}
              volumeMounts:
                - name: data
                  mountPath: /var/lib/clickhouse
                {{- with .Values.clickhouse.volumeMounts }}
                {{ toYaml . | nindent 16 }}
                {{- end }}


    volumeClaimTemplates:
      - name: data
        spec:
          storageClassName: {{ .Values.clickhouse.storage.storageClassName }}
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: {{ .Values.clickhouse.storage.size }}
{{- end }}