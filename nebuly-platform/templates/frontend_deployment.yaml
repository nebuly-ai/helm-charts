apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "frontend.fullname" . }}
  labels:
    {{- include "frontend.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.frontend.replicaCount }}
  selector:
    matchLabels:
      {{- include "frontend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/frontend_configmap.yaml") . | sha256sum }}
        {{- with .Values.frontend.podAnnotations }}
          {{- toYaml . | nindent 6 }}
        {{- end }}
      labels:
        {{- include "frontend.labels" . | nindent 8 }}
        {{- with .Values.frontend.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.frontend.podSecurityContext | nindent 8 }}

      initContainers:
        - name: populate-env-json
          image: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag | default .Chart.AppVersion }}"
          command: [ "/bin/sh", "-c" ]
          args:
            - sed "s/\${GIT_REF}/$GIT_REF/g" /env.json > /output/env.json
          volumeMounts:
            - name: config
              mountPath: /env.json
              subPath: env.json
            - name: shared
              mountPath: /output


      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.frontend.securityContext | nindent 12 }}
          image: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP

          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 3
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /env.json
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5

          resources:
            {{- toYaml .Values.frontend.resources | nindent 12 }}
          volumeMounts:
            - name: shared
              mountPath: /app/public/env.json
              subPath: env.json
          {{- with .Values.frontend.volumeMounts }}
          {{- toYaml . | nindent 14 }}
          {{- end }}
      volumes:
        - name: "config"
          configMap:
            name: {{ include "frontend.fullname" . }}
        - name: "shared"
          emptyDir: { }
      {{- with .Values.frontend.volumes }}
      {{- toYaml . | nindent 10 }}
      {{- end }}
      {{- with .Values.frontend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.frontend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.frontend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
